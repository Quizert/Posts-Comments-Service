services:
  post-comment-service:
    build: ./
    container_name: post-comment-service
    ports:
      - ${HTTP_PORT:-8080}:${HTTP_PORT:-8080}
    depends_on:
      postgres:
        condition: service_healthy

    environment:
      DB_HOST: ${DB_HOST}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_PORT: ${DB_PORT}
      HTTP_PORT: ${HTTP_PORT}
      STORAGE_MODE: ${STORAGE_MODE}
    networks:
      - app-network

  postgres:
    image: postgres:16
    container_name: posts_postgres
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5400:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME} -p ${DB_PORT:-5432}" ]
      interval: 5s
      timeout: 10s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  migrate:
    image: migrate/migrate
    container_name: migrate_service
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./migrations:/migrations
    command: [
      "-path", "/migrations",
      "-database", "postgres://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}?sslmode=disable",
      "up"
    ]
    networks:
      - app-network
networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: